// <auto-generated />
using System;
using Autobusy.Logic.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Autobusy.Logic.Migrations
{
    [DbContext(typeof(AutobusyContext))]
    [Migration("20220529163037_TryFixingCyclicIssue2")]
    partial class TryFixingCyclicIssue2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Autobusy.Logic.Models.Autobus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataProdukcji")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumerRejestracyjny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SpalanieNa100")
                        .HasPrecision(4, 2)
                        .HasColumnType("float(4)");

                    b.Property<int>("StanAutobusu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Autobusy", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Kierowca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Doswiadczenie")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kierowcy", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DzienTygodnia")
                        .HasColumnType("int");

                    b.Property<DateTime>("GodzinaRozpoczecia")
                        .HasColumnType("datetime2");

                    b.Property<int>("LiniaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LiniaId");

                    b.ToTable("Kursy", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Linia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("DlugoscWKm")
                        .HasPrecision(4, 2)
                        .HasColumnType("float(4)");

                    b.Property<string>("Numer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Linie", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.PlanKursu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanowaGodzina")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrzystanekWLiniiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KursId");

                    b.HasIndex("PrzystanekWLiniiId");

                    b.ToTable("PlanyKursu", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Przejazd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AutobusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IloscSkasowanychBiletow")
                        .HasColumnType("int");

                    b.Property<double>("IloscSpalonegoPaliwa")
                        .HasPrecision(4, 2)
                        .HasColumnType("float(4)");

                    b.Property<int>("KierowcaId")
                        .HasColumnType("int");

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutobusId");

                    b.HasIndex("KierowcaId");

                    b.HasIndex("KursId");

                    b.ToTable("Przejazdy", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Przystanek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Przystanki", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.PrzystanekWLinii", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LiczbaPorzadkowa")
                        .HasColumnType("int");

                    b.Property<int>("LiniaId")
                        .HasColumnType("int");

                    b.Property<int>("PrzystanekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LiniaId");

                    b.HasIndex("PrzystanekId");

                    b.ToTable("PrzystankiWLinii", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.RealizacjaPrzejazdu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FaktycznaGodzina")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanKursuId")
                        .HasColumnType("int");

                    b.Property<int>("PrzejazdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanKursuId");

                    b.HasIndex("PrzejazdId");

                    b.ToTable("RealizacjePrzejazdu", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Serwis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AutobusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cena")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutobusId");

                    b.ToTable("Serwisy", (string)null);
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Kurs", b =>
                {
                    b.HasOne("Autobusy.Logic.Models.Linia", "Linia")
                        .WithMany("Kursy")
                        .HasForeignKey("LiniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linia");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.PlanKursu", b =>
                {
                    b.HasOne("Autobusy.Logic.Models.Kurs", "Kurs")
                        .WithMany("PlanyKursu")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autobusy.Logic.Models.PrzystanekWLinii", "PrzystanekWLinii")
                        .WithMany("PlanyKursu")
                        .HasForeignKey("PrzystanekWLiniiId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kurs");

                    b.Navigation("PrzystanekWLinii");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Przejazd", b =>
                {
                    b.HasOne("Autobusy.Logic.Models.Autobus", "Autobus")
                        .WithMany("Przejazdy")
                        .HasForeignKey("AutobusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autobusy.Logic.Models.Kierowca", "Kierowca")
                        .WithMany("Przejazdy")
                        .HasForeignKey("KierowcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autobusy.Logic.Models.Kurs", "Kurs")
                        .WithMany("Przejazdy")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autobus");

                    b.Navigation("Kierowca");

                    b.Navigation("Kurs");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.PrzystanekWLinii", b =>
                {
                    b.HasOne("Autobusy.Logic.Models.Linia", "Linia")
                        .WithMany("PrzystankiWLinii")
                        .HasForeignKey("LiniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autobusy.Logic.Models.Przystanek", "Przystanek")
                        .WithMany("Przystanki")
                        .HasForeignKey("PrzystanekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linia");

                    b.Navigation("Przystanek");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.RealizacjaPrzejazdu", b =>
                {
                    b.HasOne("Autobusy.Logic.Models.PlanKursu", "PlanKursu")
                        .WithMany("RealizacjePrzejazdu")
                        .HasForeignKey("PlanKursuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Autobusy.Logic.Models.Przejazd", "Przejazd")
                        .WithMany("RealizacjePrzejazdu")
                        .HasForeignKey("PrzejazdId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PlanKursu");

                    b.Navigation("Przejazd");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Serwis", b =>
                {
                    b.HasOne("Autobusy.Logic.Models.Autobus", "NaprawianyAutobus")
                        .WithMany("Serwisy")
                        .HasForeignKey("AutobusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NaprawianyAutobus");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Autobus", b =>
                {
                    b.Navigation("Przejazdy");

                    b.Navigation("Serwisy");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Kierowca", b =>
                {
                    b.Navigation("Przejazdy");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Kurs", b =>
                {
                    b.Navigation("PlanyKursu");

                    b.Navigation("Przejazdy");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Linia", b =>
                {
                    b.Navigation("Kursy");

                    b.Navigation("PrzystankiWLinii");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.PlanKursu", b =>
                {
                    b.Navigation("RealizacjePrzejazdu");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Przejazd", b =>
                {
                    b.Navigation("RealizacjePrzejazdu");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.Przystanek", b =>
                {
                    b.Navigation("Przystanki");
                });

            modelBuilder.Entity("Autobusy.Logic.Models.PrzystanekWLinii", b =>
                {
                    b.Navigation("PlanyKursu");
                });
#pragma warning restore 612, 618
        }
    }
}
